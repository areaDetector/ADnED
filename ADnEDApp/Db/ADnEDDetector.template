

#####################################################################
#
# areaDetector nED client template file. This should be included by the
# top level template file. It defines the records that are specific to
# a single detector.
#
# Matt Pearson
# Sept 14
#
# Macros:
# P,R - base PV name
# PORT - Asyn port name
# DET - Asyn address (used to identify a detector, 1-based)
# TIMEOUT - Asyn timeout
#
#####################################################################

# ///
# /// Set the description name for this detector
# ///
record(stringout, "$(P)$(R)Det$(DET):Description")
{
   field(DESC, "Description")
   field(VAL, " ")
   field(PINI, "YES")
   info(autosaveFields, "VAL") 
}


#####################################################################
# Set pixel ID ranges for this detector

# ///
# /// Set the start of the pixel range for this detector DET=$(DET)
# ///
record(longout, "$(P)$(R)Det$(DET):PixelNumStart")
{
   field(DESC, "Pixel range start DET$(DET)")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(DET),$(TIMEOUT))ADNED_DET_PIXEL_NUM_START")
   field(VAL, "0")
   field(autosaveFields, "VAL")
}

# ///
# /// Get the start of the pixel range for this detector DET=$(DET)
# ///
record(longin, "$(P)$(R)Det$(DET):PixelNumStart_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(DET),$(TIMEOUT))ADNED_DET_PIXEL_NUM_START")
   field(SCAN, "I/O Intr")
   field(PINI, "YES")
}


# ///
# /// Set the end of the pixel range for this detector DET=$(DET)
# ///
record(longout, "$(P)$(R)Det$(DET):PixelNumEnd")
{
   field(DESC, "Pixel range end DET$(DET)")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(DET),$(TIMEOUT))ADNED_DET_PIXEL_NUM_END")
   field(VAL, "0")
   field(autosaveFields, "VAL")
}

# ///
# /// Get the end of the pixel range for this detector DET=$(DET)
# ///
record(longin, "$(P)$(R)Det$(DET):PixelNumEnd_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(DET),$(TIMEOUT))ADNED_DET_PIXEL_NUM_END")
   field(SCAN, "I/O Intr")
   field(PINI, "YES")
}

#####################################################################
# These records are read only and are used to feed back the NDArray 
# index values for this detector. This will be required for the 
# plugins that extract the detector specific data.

# ///
# /// The NDArray detector data index start for DET=$(DET)
# ///
record(longin, "$(P)$(R)Det$(DET):NDArrayStart_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(DET),$(TIMEOUT))ADNED_DET_NDARRAY_START")
   field(SCAN, "I/O Intr")
   field(PINI, "YES")
}

# ///
# /// The NDArray detector data index end for DET=$(DET)
# ///
record(longin, "$(P)$(R)Det$(DET):NDArrayEnd_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(DET),$(TIMEOUT))ADNED_DET_NDARRAY_END")
   field(SCAN, "I/O Intr")
   field(PINI, "YES")
}

# ///
# /// The NDArray detector data index size for DET=$(DET)
# ///
record(longin, "$(P)$(R)Det$(DET):NDArraySize_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(DET),$(TIMEOUT))ADNED_DET_NDARRAY_SIZE")
   field(SCAN, "I/O Intr")
   field(PINI, "YES")
}

# ///
# /// The NDArray TOF index start for DET=$(DET)
# ///
record(longin, "$(P)$(R)Det$(DET):NDArrayTOFStart_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(DET),$(TIMEOUT))ADNED_DET_NDARRAY_TOF_START")
   field(SCAN, "I/O Intr")
   field(PINI, "YES")
}

# ///
# /// The NDArray TOF index end for DET=$(DET)
# ///
record(longin, "$(P)$(R)Det$(DET):NDArrayTOFEnd_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(DET),$(TIMEOUT))ADNED_DET_NDARRAY_TOF_END")
   field(SCAN, "I/O Intr")
   field(PINI, "YES")
}

#####################################################################
# Detector specific data feedback

# ///
# /// Event rate
# ///
record(longin, "$(P)$(R)Det$(DET):EventRate_RBV")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(DET),$(TIMEOUT))ADNED_DET_EVENT_RATE")
   field(SCAN, "I/O Intr")
   field(EGU, "e/s")
}


